\documentclass{article}

\begin{document}
<<include=FALSE>>=
library(tidyverse)
library(xtable)
@

<<echo=FALSE, cache=TRUE, message=FALSE, warning=FALSE>>=
# EMPIRICAL BOOTSTRAP DISTRIBUTION
set.seed(4321)
N<-2000
Q=c(0.1,0.5)
B<-1000000
ordered_x = 1:N
index_med<-matrix(NA,B,2)
for(b in 1:B){
  pois_temp=rpois(N,1)
  n<-round((sum(pois_temp)+1)*Q)
  index_med[b,]<-ifelse(round(n)==0,0,rep(ordered_x, pois_temp)[n])
}

@




<<echo=FALSE, cache=FALSE, message=FALSE, warning=FALSE, fig.width=6, fig.asp=0.85>>=
tib<-tibble(index=index_med[,1], Distribution="Empirical")

tib2=tibble(index=rbinom(B,N+1,Q[1]), Distribution="Binomial(2001,0.1)")
tib<-bind_rows(tib,tib2)

ggplot(tib, aes(x=index,group=Distribution))+geom_density(aes(color=Distribution), size=1)+theme(legend.position = "bottom")

@



<<echo=FALSE, cache=FALSE, message=FALSE, warning=FALSE, fig.width=6, fig.asp=0.85>>=
tib<-tibble(index=index_med[,2], Distribution="Empirical")

tib2=tibble(index=rbinom(B,N+1,Q[2]), Distribution="Binomial(2001,0.5)")
tib<-bind_rows(tib,tib2)

ggplot(tib, aes(x=index,group=Distribution))+geom_density(aes(color=Distribution), size=1)+theme(legend.position = "bottom")

@


\pagebreak

<<echo=FALSE, cache=FALSE, message=FALSE, warning=FALSE>>=
tib<-read_csv("sim1.csv")
tib2<-tib %>% group_by(Q) %>% summarise(Empirical_coverage=1-mean(sig_fast), 
                                        upper_CI=1-mean(sig_fast) - qnorm(0.975)*sqrt(((1-mean(sig_fast))*mean(sig_fast))/length(sig_fast)),
                                        lower_CI=1-mean(sig_fast) + qnorm(0.975)*sqrt(((1-mean(sig_fast))*mean(sig_fast))/length(sig_fast)))

print(xtable(tib2, digits=4), include.rownames = FALSE)
@


<<echo=FALSE, cache=FALSE, message=FALSE, warning=FALSE>>=
tib<-read_csv("sim2.csv")
tib2<-tib %>% group_by(Q) %>% summarise(Empirical_coverage=1-mean(sig_fast), 
                                        upper_CI=1-mean(sig_fast) - qnorm(0.975)*sqrt(((1-mean(sig_fast))*mean(sig_fast))/length(sig_fast)),
                                        lower_CI=1-mean(sig_fast) + qnorm(0.975)*sqrt(((1-mean(sig_fast))*mean(sig_fast))/length(sig_fast)))

print(xtable(tib2, digits=c(2,2,4,4,4)), include.rownames = FALSE)

@






<<echo=FALSE, cache=TRUE, eval=FALSE, message=FALSE, warning=FALSE>>=
set.seed(625)
B<-1000000
NN<-c(100,200,500,1000,2000,3000,4000,5000,10000)
tib<-tibble(dist=double(), Q=double(), B=double(),N=double())
Q<-c(0.01,0.1,0.25,0.5)

for(n in 1:length(NN)){
  N<-NN[n]
  ordered_x<-1:N
  index_med<-matrix(NA, B, length(Q))
  for(b in 1:B){
    pois_temp=rpois(N,1)
    n_plus_1 <- sum(pois_temp)+1
    nn<-numeric()
    order_out<-rep(ordered_x, pois_temp)
    for(q in 1:length(Q)){
      d<-rbinom(1,1,1-((n_plus_1*Q[q])%%1))==1
      nn<-ifelse((n_plus_1*Q[q])%%1==0,n_plus_1*Q[q],
                  ifelse(d,
                         floor(n_plus_1*Q[q]),
                         ceiling(n_plus_1*Q[q])))
      index_med[b,q]<-ifelse(nn==0,0,order_out[nn])
    }
  }
  distances<-numeric()
  for(q in 1:length(Q)){
    temp<-table(index_med[,q])
    temp<-as_tibble(cbind(as.numeric(rownames(temp)),as.numeric(temp)))
    temp2<-as_tibble(cbind((0:(N+1))[!(0:(N+1))%in%temp$V1],0))
    temp3<-bind_rows(temp, temp2) %>% arrange(V1)
    distances[q]<-max(abs(temp3$V2/B - dbinom(0:(N+1),N+1,Q[q])))
  }
  
  tib<-bind_rows(tib,tibble(dist=distances, Q=Q, B=B, N=N))
  print(N)
}


#saveRDS(tib, "tib_bin_comparison_onesample")
tib<-readRDS("tib_bin_comparison_onesample")
stib<-spread(select(tib,-B), 1, key="Q")
print(xtable(stib, include.rownames=FALSE, digits = c(0,0,5,5,5,5)), include.rownames=FALSE)


@


<<echo=FALSE, cache=FALSE, message=FALSE, warning=FALSE>>=
tib<-readRDS("tib_bin_comparison_onesample")
stib<-spread(select(tib,-B), 1, key="Q")
print(xtable(stib, include.rownames=FALSE, digits = c(0,0,5,5,5,5)), include.rownames=FALSE)


@



\end{document}